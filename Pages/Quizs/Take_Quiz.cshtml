@page "{subjectId:int}/{quizId:int}"
@model Quizpractice.Pages.Quizs.IndexModel

<!-- Hiển thị thông báo kết quả trả lời -->
@if (TempData["Result"] != null)
{
    <div class="alert alert-info">
        @TempData["Result"]
    </div>
}

<div class="review-progress-container">
    <div class="review-progress-header">
        <h2>Progress</h2>
        <span class="close-btn">X</span>
    </div>
    <div class="review-progress-content">
        <p>Review before scoring exam..</p>
        <div class="progress-options">
            <div class="option unanswered">UNANSWERED</div>
            <div class="option marked">MARKED</div>
            <div class="option answered">ANSWERED</div>
            <div class="option all-questions">ALL QUESTIONS</div>
        </div>
        <div class="progress-numbers">
            @for (int i = 1; i <= Model.Questions.Count; i++)
            {
                var questionId = Model.Questions[i - 1].QuestionId;
                var answerStatus = HttpContext.Session.GetInt32($"Answer_{questionId}");

                <a href="javascript:void(0);" onclick="goToQuestion(@Model.Questions[i-1].QuestionId)">
                    <div class="number @(answerStatus.HasValue ? "answered" : "unanswered")">
                        @i
                    </div>
                </a>
            }
        </div>
        <div class="score-exam-btn">
            <button class="btn btn-primary" onclick="submitExam()">SCORE EXAM NOW</button>
        </div>
    </div>
</div>

<!-- Hiển thị nội dung câu hỏi -->
<div class="review-question-details" data-question-id="@Model.Question?.QuestionId">
    @if (Model.Question != null)
    {
        @await Html.PartialAsync("_QuestionPartial", Model.Question)
    }
</div>

@section Scripts {
    <script>
        var subjectId = @Model.SubjectId;
        var quizId = @Model.QuizId;

        var isRequesting = false; // Biến kiểm tra xem yêu cầu đang xử lý hay chưa

        $(document).on('change', 'input[name="selectedAnswer"]', function () {
            const selectedAnswer = $(this).val();
            const questionId = $(this).closest('.review-question-details').data('question-id');

            // Gửi yêu cầu AJAX để lưu đáp án
            $.ajax({
                url: '@Url.Page("/Quizs/Take_Quiz", new { subjectId = Model.SubjectId, quizId = Model.QuizId })',
                type: 'POST',
                data: {
                    answerId: selectedAnswer,
                    questionId: questionId
                },
                success: function () {
                    console.log("Answer saved successfully!");
                },
                error: function () {
                    alert("Error saving the answer.");
                }
            });
        });

        // Hàm chuyển tới câu hỏi theo ID
        function goToQuestion(questionId) {
            if (isRequesting) {
                return; // Nếu có yêu cầu đang xử lý, không làm gì
            }

            isRequesting = true; // Đánh dấu yêu cầu đang xử lý

            // Gửi yêu cầu AJAX để lấy câu hỏi mới
            $.ajax({
                url: '/Quizs/Take_Quiz/' + subjectId + '/' + quizId + '?questionId=' + questionId,
                type: 'GET',
                success: function (data) {
                    $(".review-question-details").html(data); // Cập nhật câu hỏi mới

                    isRequesting = false; // Đánh dấu yêu cầu hoàn thành
                },
                error: function () {
                    alert("Error while fetching the question.");
                    isRequesting = false; // Đánh dấu yêu cầu hoàn thành khi có lỗi
                }
            });
        }

        // Hàm nộp bài thi
        function submitExam() {
            // Gửi yêu cầu AJAX để nộp bài thi
            $.ajax({
                url: '/Quizs/SubmitExam/' + subjectId + '/' + quizId, // Điều hướng đến trang kết quả
                type: 'POST',
                success: function () {
                    window.location.href = '/Quizs/Result'; // Chuyển đến trang kết quả
                },
                error: function () {
                    alert("Error submitting the exam.");
                }
            });
        }
    </script>
}

