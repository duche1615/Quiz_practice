@page "{subjectId:int}/{quizId:int}"
@model Quizpractice.Pages.Quizs.IndexModel

<!-- Hiển thị thông báo kết quả trả lời -->
@if (TempData["Result"] != null)
{
    <div class="alert alert-info">
        @TempData["Result"]
    </div>
}

<div class="review-progress-container">
    <div class="review-progress-header">
        <h2>Progress</h2>
        <span class="close-btn">X</span>
    </div>
    <div class="review-progress-content">
        <p>Review before scoring exam..</p>
        <div class="progress-options">
            <div class="option unanswered">UNANSWERED</div>
            <div class="option marked">MARKED</div>
            <div class="option answered">ANSWERED</div>
            <div class="option all-questions">ALL QUESTIONS</div>
        </div>
        <div class="progress-numbers">
            @for (int i = 1; i <= Model.Questions.Count; i++)
            {
                var questionId = Model.Questions[i - 1].QuestionId;
                var answerStatus = HttpContext.Session.GetInt32($"Answer_{questionId}");

                <a href="javascript:void(0);" onclick="goToQuestion(@Model.Questions[i-1].QuestionId)">
                    <div class="number @(HttpContext.Session.GetInt32($"Answer_{Model.Questions[i - 1].QuestionId}") != null ? "answered" : "unanswered")">
                        @i
                    </div>
                </a>
            }
        </div>
        <div class="score-exam-btn">
            <button class="btn btn-primary">SCORE EXAM NOW</button>
        </div>
    </div>
</div>

<!-- Hiển thị nội dung câu hỏi -->
<div class="review-question-details">
    @if (Model.Question != null)
    {
        @await Html.PartialAsync("_QuestionPartial", Model.Question)
    }
</div>

@section Scripts {
    <script type="text/javascript">
        var isRequesting = false; // Biến kiểm tra xem yêu cầu đang xử lý hay chưa

        // Hàm lưu đáp án vào session và chuyển câu hỏi
        function goToQuestion(questionId) {
            if (isRequesting) return;

            // Lấy đáp án đã chọn
            var selectedAnswerId = $("input[name='selectedAnswer']:checked").val();

            if (!selectedAnswerId) {
                alert("Please select an answer first.");
                return;
            }

            isRequesting = true;

            // Gửi đáp án lên session
            $.ajax({
                url: '/Quizs/Take_Quiz/SaveAnswer',  // Đảm bảo URL này đúng
                type: 'POST',
                data: {
                    questionId: questionId,
                    selectedAnswerId: selectedAnswerId
                },
                success: function (response) {
                    // Sau khi gửi đáp án, lấy câu hỏi tiếp theo
                    $.ajax({
                        url: `/Quizs/Take_Quiz/${@Model.SubjectId}/${@Model.QuizId}?questionId=${questionId}`,
                        type: 'GET',
                        success: function (data) {
                            $(".review-question-details").html(data);  // Cập nhật câu hỏi mới
                            isRequesting = false;
                        },
                        error: function () {
                            alert("Error while fetching the question.");
                            isRequesting = false;
                        }
                    });
                },
                error: function () {
                    alert("Error while saving answer.");
                    isRequesting = false;
                }
            });
        }
    </script>
}
