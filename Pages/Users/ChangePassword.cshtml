@page
@model Quizpractice.Pages.Users.ChangePasswordModel
@{
    Layout = Model.Layout;
}

<h2>Change Password</h2>

<form method="post">
    <div class="form-group">
        <label for="OldPassword">Old Password</label>
        <input type="password" id="OldPassword" asp-for="ChangePassword.OldPassword" class="form-control" required />
        <span asp-validation-for="ChangePassword.OldPassword" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="NewPassword">New Password</label>
        <input type="password" id="NewPassword" asp-for="ChangePassword.NewPassword" class="form-control" required />
        <span asp-validation-for="ChangePassword.NewPassword" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm New Password</label>
        <input type="password" id="ConfirmPassword" asp-for="ChangePassword.ConfirmPassword" class="form-control" required />
        <span asp-validation-for="ChangePassword.ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Change Password</button>
</form>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="error">
        @Model.ErrorMessage
    </div>
}

@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="success">
        @Model.SuccessMessage
    </div>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}
